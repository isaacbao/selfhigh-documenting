[2016-11-16 20:38:43.591] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-23T12:38:43.589Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-16 20:42:35.475] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-23T12:42:35.473Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-21 20:05:45.225] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-28T12:05:45.222Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-21 20:21:40.854] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-28T12:21:40.851Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-21 20:23:40.921] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-28T12:23:40.921Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-21 20:37:15.808] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-28T12:37:15.805Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-21 20:37:18.705] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-28T12:37:18.704Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-21 20:39:15.161] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-28T12:39:15.159Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-21 20:41:15.180] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-28T12:41:15.180Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-21 20:55:13.240] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-28T12:55:13.237Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-21 20:57:13.254] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-28T12:57:13.253Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-21 20:59:18.345] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-28T12:59:18.344Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-21 21:01:48.415] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-28T13:01:48.415Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-22 19:37:28.871] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T11:37:28.862Z,
     originalMaxAge: 604799994,
     httpOnly: true } }
[2016-11-22 19:39:43.394] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T11:39:43.391Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-22 19:39:46.015] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T11:39:46.015Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-22 19:41:46.042] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T11:41:46.041Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-22 19:43:51.103] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T11:43:51.102Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-22 20:33:48.869] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T12:33:48.866Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-22 20:35:48.965] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T12:35:48.959Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-22 20:36:32.680] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T12:36:32.677Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-22 20:40:58.112] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T12:40:58.109Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-22 20:46:04.001] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T12:46:03.997Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-22 20:46:31.835] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T12:46:31.833Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-22 20:46:54.686] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T12:46:54.686Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-22 20:47:15.078] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T12:47:15.062Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-22 20:48:19.549] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T12:48:19.548Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-22 20:55:52.050] [ERROR] auth - IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 457,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 66448,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idleStart: 66447,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 457,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 66448,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idleStart: 66447,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:3000',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'upgrade-insecure-requests': '1',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'zh-CN,zh;q=0.8' },
  rawHeaders: 
   [ 'Host',
     'localhost:3000',
     'Connection',
     'keep-alive',
     'Cache-Control',
     'max-age=0',
     'Upgrade-Insecure-Requests',
     '1',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36',
     'Accept',
     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/getDocument?documentId=DJWYrja5',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 457,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 66448,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idleStart: 66447,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/selfhighDocument/V0',
  originalUrl: '/selfhighDocument/V0/getDocument?documentId=DJWYrja5',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: '?documentId=DJWYrja5',
     query: 'documentId=DJWYrja5',
     pathname: '/getDocument',
     path: '/getDocument?documentId=DJWYrja5',
     href: '/getDocument?documentId=DJWYrja5',
     _raw: '/getDocument?documentId=DJWYrja5' },
  params: {},
  query: { documentId: 'DJWYrja5' },
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 66447,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 66447,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function],
     end: [Function: end] },
  body: {},
  secret: undefined,
  cookies: {},
  signedCookies: {},
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: '?documentId=DJWYrja5',
     query: 'documentId=DJWYrja5',
     pathname: '/selfhighDocument/V0/getDocument',
     path: '/selfhighDocument/V0/getDocument?documentId=DJWYrja5',
     href: '/selfhighDocument/V0/getDocument?documentId=DJWYrja5',
     _raw: '/selfhighDocument/V0/getDocument?documentId=DJWYrja5' },
  sessionStore: 
   RedisStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     prefix: 'sess:',
     serializer: {},
     client: 
      RedisClient {
        domain: null,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        address: '127.0.0.1:6379',
        connection_options: [Object],
        connection_id: 0,
        connected: true,
        ready: true,
        should_buffer: false,
        max_attempts: 0,
        command_queue: [Object],
        offline_queue: [Object],
        pipeline_queue: [Object],
        connect_timeout: 3600000,
        enable_offline_queue: true,
        retry_max_delay: null,
        retry_timer: null,
        retry_totaltime: 0,
        retry_delay: 200,
        retry_backoff: 1.7,
        attempts: 1,
        pub_sub_mode: 0,
        subscription_set: {},
        monitoring: false,
        message_buffers: false,
        closing: false,
        server_info: [Object],
        auth_pass: undefined,
        selected_db: undefined,
        old_state: null,
        fire_strings: true,
        pipeline: false,
        sub_commands_left: 0,
        times_connected: 1,
        buffers: false,
        options: [Object],
        reply: 'ON',
        reply_parser: [Object],
        stream: [Object],
        emitted_end: false,
        cork: [Function],
        uncork: [Function] },
     ttl: undefined,
     disableTTL: undefined,
     generate: [Function] },
  sessionID: '99WELJxnePwRzFoufQKNw2lvcn48I043',
  session: 
   Session {
     cookie: 
      { path: '/selfhighDocument/V0',
        _expires: 2016-11-29T12:55:52.047Z,
        originalMaxAge: 604800000,
        httpOnly: true } },
  _logging: true,
  route: 
   Route {
     path: '/getDocument',
     stack: [ [Object], [Object] ],
     methods: { get: true } } }
[2016-11-22 20:58:10.805] [ERROR] auth - IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 457,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 71565,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idleStart: 71562,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 457,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 71565,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idleStart: 71562,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:3000',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'upgrade-insecure-requests': '1',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'zh-CN,zh;q=0.8' },
  rawHeaders: 
   [ 'Host',
     'localhost:3000',
     'Connection',
     'keep-alive',
     'Cache-Control',
     'max-age=0',
     'Upgrade-Insecure-Requests',
     '1',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36',
     'Accept',
     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/getDocument?documentId=DJWYrja5',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 457,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 71565,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idleStart: 71562,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/selfhighDocument/V0',
  originalUrl: '/selfhighDocument/V0/getDocument?documentId=DJWYrja5',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: '?documentId=DJWYrja5',
     query: 'documentId=DJWYrja5',
     pathname: '/getDocument',
     path: '/getDocument?documentId=DJWYrja5',
     href: '/getDocument?documentId=DJWYrja5',
     _raw: '/getDocument?documentId=DJWYrja5' },
  params: {},
  query: { documentId: 'DJWYrja5' },
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 71562,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 71562,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function],
     end: [Function: end] },
  body: {},
  secret: undefined,
  cookies: {},
  signedCookies: {},
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: '?documentId=DJWYrja5',
     query: 'documentId=DJWYrja5',
     pathname: '/selfhighDocument/V0/getDocument',
     path: '/selfhighDocument/V0/getDocument?documentId=DJWYrja5',
     href: '/selfhighDocument/V0/getDocument?documentId=DJWYrja5',
     _raw: '/selfhighDocument/V0/getDocument?documentId=DJWYrja5' },
  sessionStore: 
   RedisStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     prefix: 'sess:',
     serializer: {},
     client: 
      RedisClient {
        domain: null,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        address: '127.0.0.1:6379',
        connection_options: [Object],
        connection_id: 0,
        connected: true,
        ready: true,
        should_buffer: false,
        max_attempts: 0,
        command_queue: [Object],
        offline_queue: [Object],
        pipeline_queue: [Object],
        connect_timeout: 3600000,
        enable_offline_queue: true,
        retry_max_delay: null,
        retry_timer: null,
        retry_totaltime: 0,
        retry_delay: 200,
        retry_backoff: 1.7,
        attempts: 1,
        pub_sub_mode: 0,
        subscription_set: {},
        monitoring: false,
        message_buffers: false,
        closing: false,
        server_info: [Object],
        auth_pass: undefined,
        selected_db: undefined,
        old_state: null,
        fire_strings: true,
        pipeline: false,
        sub_commands_left: 0,
        times_connected: 1,
        buffers: false,
        options: [Object],
        reply: 'ON',
        reply_parser: [Object],
        stream: [Object],
        emitted_end: false,
        cork: [Function],
        uncork: [Function] },
     ttl: undefined,
     disableTTL: undefined,
     generate: [Function] },
  sessionID: 'YCtSIxStfsiKngEH1qzlnX-XlCbXD6Mk',
  session: 
   Session {
     cookie: 
      { path: '/selfhighDocument/V0',
        _expires: 2016-11-29T12:58:10.801Z,
        originalMaxAge: 604800000,
        httpOnly: true } },
  _logging: true,
  route: 
   Route {
     path: '/getDocument',
     stack: [ [Object], [Object] ],
     methods: { get: true } } }
[2016-11-22 20:58:17.933] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-22 20:58:17.944] [ERROR] auth - IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 1036,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 422,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 71565,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 78734,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function],
        end: [Function: end] },
     _peername: { address: '::1', family: 'IPv6', port: 61711 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 1036,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 422,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 71565,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 78734,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function],
        end: [Function: end] },
     _peername: { address: '::1', family: 'IPv6', port: 61711 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:3000',
     connection: 'keep-alive',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     'upgrade-insecure-requests': '1',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'zh-CN,zh;q=0.8',
     cookie: 'JS_SESSIONID=s%3AYCtSIxStfsiKngEH1qzlnX-XlCbXD6Mk.0bWchtUeaf0UinW4Gqa6WtIW%2BqbqkfSnPqIxibcEgQg' },
  rawHeaders: 
   [ 'Host',
     'localhost:3000',
     'Connection',
     'keep-alive',
     'Pragma',
     'no-cache',
     'Cache-Control',
     'no-cache',
     'Upgrade-Insecure-Requests',
     '1',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36',
     'Accept',
     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8',
     'Cookie',
     'JS_SESSIONID=s%3AYCtSIxStfsiKngEH1qzlnX-XlCbXD6Mk.0bWchtUeaf0UinW4Gqa6WtIW%2BqbqkfSnPqIxibcEgQg' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/getDocument?documentId=DJWYrja5',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 1036,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 422,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 71565,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 78734,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function],
        end: [Function: end] },
     _peername: { address: '::1', family: 'IPv6', port: 61711 } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/selfhighDocument/V0',
  originalUrl: '/selfhighDocument/V0/getDocument?documentId=DJWYrja5',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: '?documentId=DJWYrja5',
     query: 'documentId=DJWYrja5',
     pathname: '/getDocument',
     path: '/getDocument?documentId=DJWYrja5',
     href: '/getDocument?documentId=DJWYrja5',
     _raw: '/getDocument?documentId=DJWYrja5' },
  params: {},
  query: { documentId: 'DJWYrja5' },
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 422,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 78734,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 422,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 78734,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function],
     end: [Function: end] },
  body: {},
  secret: undefined,
  cookies: { JS_SESSIONID: 's:YCtSIxStfsiKngEH1qzlnX-XlCbXD6Mk.0bWchtUeaf0UinW4Gqa6WtIW+qbqkfSnPqIxibcEgQg' },
  signedCookies: {},
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: '?documentId=DJWYrja5',
     query: 'documentId=DJWYrja5',
     pathname: '/selfhighDocument/V0/getDocument',
     path: '/selfhighDocument/V0/getDocument?documentId=DJWYrja5',
     href: '/selfhighDocument/V0/getDocument?documentId=DJWYrja5',
     _raw: '/selfhighDocument/V0/getDocument?documentId=DJWYrja5' },
  sessionStore: 
   RedisStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     prefix: 'sess:',
     serializer: {},
     client: 
      RedisClient {
        domain: null,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        address: '127.0.0.1:6379',
        connection_options: [Object],
        connection_id: 0,
        connected: true,
        ready: true,
        should_buffer: false,
        max_attempts: 0,
        command_queue: [Object],
        offline_queue: [Object],
        pipeline_queue: [Object],
        connect_timeout: 3600000,
        enable_offline_queue: true,
        retry_max_delay: null,
        retry_timer: null,
        retry_totaltime: 0,
        retry_delay: 200,
        retry_backoff: 1.7,
        attempts: 1,
        pub_sub_mode: 0,
        subscription_set: {},
        monitoring: false,
        message_buffers: false,
        closing: false,
        server_info: [Object],
        auth_pass: undefined,
        selected_db: undefined,
        old_state: null,
        fire_strings: true,
        pipeline: false,
        sub_commands_left: 0,
        times_connected: 1,
        buffers: false,
        options: [Object],
        reply: 'ON',
        reply_parser: [Object],
        stream: [Object],
        emitted_end: false,
        cork: [Function],
        uncork: [Function] },
     ttl: undefined,
     disableTTL: undefined,
     generate: [Function] },
  sessionID: 'YCtSIxStfsiKngEH1qzlnX-XlCbXD6Mk',
  session: 
   Session {
     cookie: 
      { path: '/selfhighDocument/V0',
        _expires: 2016-11-29T12:58:17.771Z,
        originalMaxAge: 604800000,
        httpOnly: true } },
  _logging: true,
  route: 
   Route {
     path: '/getDocument',
     stack: [ [Object], [Object] ],
     methods: { get: true } } }
[2016-11-22 20:58:18.290] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-23 20:27:30.438] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-29T12:58:17.771Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-23 20:27:35.129] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-23 20:34:11.921] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T12:27:35.108Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-23 20:34:11.979] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-23 20:34:21.121] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T12:34:11.974Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-23 20:34:21.150] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-23 20:34:33.381] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T12:34:21.144Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2016-11-23 20:34:33.408] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-23 20:48:29.920] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T12:34:33.403Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 20:48:29.955] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-23 20:51:51.349] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T12:48:29.948Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 20:51:51.393] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-23 20:54:05.201] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T12:51:51.383Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 20:54:05.238] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-23 20:55:43.599] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T12:54:05.230Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 20:55:43.657] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-23 20:56:35.127] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T12:55:43.628Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 20:56:35.156] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-23 20:57:10.150] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T12:56:35.153Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 20:57:10.762] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 20:57:11.080] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 20:57:57.299] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T12:57:11.077Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 20:57:57.408] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 20:57:57.731] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 21:00:01.575] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T12:57:57.728Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 21:00:01.681] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 21:00:02.163] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 21:00:20.240] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T13:00:02.160Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 21:00:20.358] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 21:00:20.578] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 21:00:22.707] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T13:00:20.576Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 21:00:22.837] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 21:00:23.019] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 21:00:24.730] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T13:00:23.016Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 21:00:24.841] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 21:00:25.046] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 21:02:00.870] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T13:00:25.042Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 21:02:02.500] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 21:02:02.699] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 21:02:41.940] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T13:02:02.693Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 21:02:42.107] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 21:02:42.427] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-23 21:02:59.592] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T13:02:42.422Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-23 21:03:00.743] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-24 19:24:04.904] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-11-30T13:02:02.693Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-24 19:24:09.153] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-24 19:31:53.371] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-12-01T11:24:09.134Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2016-11-24 19:31:55.201] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 19:31:55.586] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 19:41:00.187] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-12-01T11:31:55.583Z,
     originalMaxAge: 604799998,
     httpOnly: true } }
[2016-11-24 19:41:01.626] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 19:41:02.037] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 19:41:44.897] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-12-01T11:41:02.032Z,
     originalMaxAge: 604799998,
     httpOnly: true } }
[2016-11-24 19:41:45.077] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 19:41:45.374] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 19:46:42.200] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-12-01T11:41:45.367Z,
     originalMaxAge: 604799998,
     httpOnly: true } }
[2016-11-24 19:46:43.957] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 19:46:44.204] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 19:48:19.113] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-12-01T11:46:44.199Z,
     originalMaxAge: 604799998,
     httpOnly: true } }
[2016-11-24 19:48:20.712] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 19:48:21.007] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 19:53:56.641] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 20:43:24.984] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-12-01T11:53:56.633Z,
     originalMaxAge: 604799998,
     httpOnly: true } }
[2016-11-24 20:44:20.475] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-12-01T11:53:56.633Z,
     originalMaxAge: 604799998,
     httpOnly: true } }
[2016-11-24 20:46:36.314] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-12-01T11:53:56.633Z,
     originalMaxAge: 604799998,
     httpOnly: true } }
[2016-11-24 20:46:37.649] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 20:46:39.105] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 20:47:18.535] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-12-01T12:46:39.101Z,
     originalMaxAge: 604799998,
     httpOnly: true } }
[2016-11-24 20:47:19.776] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 20:47:20.306] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 20:58:59.282] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-12-01T12:47:20.302Z,
     originalMaxAge: 604799998,
     httpOnly: true } }
[2016-11-24 20:58:59.997] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-24 20:59:17.777] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-12-01T12:58:59.973Z,
     originalMaxAge: 604799998,
     httpOnly: true } }
[2016-11-24 20:59:18.487] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2016-11-24 20:59:32.656] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2016-12-01T12:59:18.456Z,
     originalMaxAge: 604799998,
     httpOnly: true } }
[2016-11-24 20:59:33.660] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2016-11-24 20:59:35.096] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2017-04-13 20:44:04.940] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-20T12:44:04.938Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-13 20:46:04.989] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-20T12:46:04.988Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-13 20:48:05.269] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-20T12:48:05.268Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-13 20:50:10.323] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-20T12:50:10.322Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-13 20:52:40.379] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-20T12:52:40.379Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-13 20:55:40.430] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-20T12:55:40.430Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-13 21:02:40.484] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-20T13:02:40.484Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-13 21:14:40.631] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-20T13:14:40.631Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 19:32:37.945] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T11:32:37.942Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 19:34:38.028] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T11:34:38.027Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 19:36:38.389] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T11:36:38.388Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 19:38:43.413] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T11:38:43.412Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 19:39:07.245] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T11:39:07.245Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 19:39:55.138] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T11:39:55.138Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 19:40:35.196] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T11:40:35.188Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 19:48:08.208] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T11:48:08.207Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 19:52:29.801] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T11:52:29.800Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 19:54:16.698] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T11:54:16.698Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 19:59:19.440] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T11:59:19.440Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 19:59:22.674] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2017-04-19 20:09:56.860] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T11:59:22.642Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 20:10:01.680] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2017-04-19 20:11:33.431] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T12:10:01.609Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 20:11:34.814] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2017-04-19 20:11:54.202] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T12:11:34.793Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
[2017-04-19 20:11:55.007] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2017-04-19 20:12:07.012] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2017-04-19 20:25:05.200] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2017-04-19 20:25:30.960] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T12:25:05.196Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-19 20:26:09.050] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T12:25:31.344Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-19 20:26:09.808] [ERROR] app - GET /selfhighDocument/V0/css/base.css 404
[2017-04-19 20:32:03.519] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T12:26:09.734Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-19 20:53:46.043] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T12:32:04.204Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-19 20:55:29.585] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T12:53:47.694Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 19:26:00.849] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-26T12:55:30.048Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 19:26:07.202] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2017-04-20 19:36:36.468] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T11:26:07.136Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 19:36:37.273] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2017-04-20 19:38:05.296] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T11:36:37.224Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:04:02.670] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:02.632Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:04:06.581] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2017-04-20 20:16:42.605] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:17:36.639] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:18:46.664] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:21:14.600] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:22:49.984] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:24:23.142] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:25:11.897] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:25:59.168] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:26:39.869] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:27:21.067] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:27:28.365] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:28:18.838] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:29:21.003] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:30:13.891] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:31:48.370] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:04:06.566Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:32:41.780] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:31:49.853Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:35:54.661] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:32:42.035Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:35:54.722] [ERROR] app - GET /selfhighDocument/V0/getDocument?documentId=DJWYrja5 500
[2017-04-20 20:36:08.956] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:35:54.708Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:37:20.675] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:36:09.494Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-20 20:37:38.396] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-04-27T12:37:21.116Z,
     originalMaxAge: 604799999,
     httpOnly: true } }
[2017-04-24 16:52:13.351] [ERROR] auth - Session {
  cookie: 
   { path: '/selfhighDocument/V0',
     _expires: 2017-05-01T08:52:13.344Z,
     originalMaxAge: 604800000,
     httpOnly: true } }
